/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2018-07-26 00:26:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mrp.web.vo.PageInfo;
import mrp.web.vo.Board;
import java.util.ArrayList;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("mrp.web.vo.Board");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("mrp.web.vo.PageInfo");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("   \r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>DAEGU</title>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".a1{\r\n");
      out.write("   display : block;\r\n");
      out.write("   width : 100%;\r\n");
      out.write("}\r\n");
      out.write(".a1:link {text-decoration:none; color : #646464;}\r\n");
      out.write(".a1:visited{text-decoration:none; color: #646464;}\r\n");
      out.write(".a1:active {text-decoration:none; color: #646464;}\r\n");
      out.write(".a1:hover {text-decoration:none; color: white;}\r\n");
      out.write(".a2:link {text-decoration:none; color : #646464;}\r\n");
      out.write(".a2:visited{text-decoration:none; color: #646464;}\r\n");
      out.write(".a2:active {text-decoration:none; color: #646464;}\r\n");
      out.write(".a2:hover {text-decoration:none; color: white;}\r\n");
      out.write(".a3:link {text-decoration:none; color : #646464;}\r\n");
      out.write(".a3:visited{text-decoration:none; color: #646464;}\r\n");
      out.write(".a3:active {text-decoration:none; color: #646464;}\r\n");
      out.write(".a3:hover {text-decoration:none; color: #646464;}\r\n");
      out.write("   #mainContent{\r\n");
      out.write("      margin-top: 3%;\r\n");
      out.write("   }\r\n");
      out.write("   #boardListArea{\r\n");
      out.write("   margin-top : 0%;\r\n");
      out.write("   width : 600px;\r\n");
      out.write("   height : 450px;\r\n");
      out.write("   margin-left:10%;\r\n");
      out.write("   margin-right:12.1%;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("/*    border : 2px soild gold; */\r\n");
      out.write("   display: inline-block;\r\n");
      out.write("   vertical-align: top;\r\n");
      out.write("   \r\n");
      out.write("   }\r\n");
      out.write("   h1{\r\n");
      out.write("      text-align:center;\r\n");
      out.write("   }\r\n");
      out.write("   table {\r\n");
      out.write("   color: #333;\r\n");
      out.write("   font-family: Helvetica, Arial, sans-serif;\r\n");
      out.write("   width: 640px;\r\n");
      out.write("/*    border-collapse: collapse; */\r\n");
      out.write("   border-spacing: 0;\r\n");
      out.write("}\r\n");
      out.write("td, th {\r\n");
      out.write("   border: 1px solid transparent;\r\n");
      out.write("   /* No more visible border */\r\n");
      out.write("   height: 30px;\r\n");
      out.write("   transition: all 0.3s;\r\n");
      out.write("   /* Simple transition for hover effect */\r\n");
      out.write("}\r\n");
      out.write("th {\r\n");
      out.write("   background: #DFDFDF;\r\n");
      out.write("   /* Darken header a bit */\r\n");
      out.write("   font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("td {\r\n");
      out.write("   background: #FAFAFA;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   color : #585858;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Cells in even rows (2,4,6...) are one color */\r\n");
      out.write("\r\n");
      out.write("tr:nth-child(even) td {\r\n");
      out.write("   background: #F1F1F1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\r\n");
      out.write("\r\n");
      out.write("tr:nth-child(odd) td {\r\n");
      out.write("   background: #FEFEFE;\r\n");
      out.write("}\r\n");
      out.write(".namehover:hover {\r\n");
      out.write("   background: #666;\r\n");
      out.write("   color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Hover cell effect! */\r\n");
      out.write("   }\r\n");
      out.write("   .tr_title{\r\n");
      out.write("      background : orange;\r\n");
      out.write("   }\r\n");
      out.write("   .td_num, .td_readcount{\r\n");
      out.write("      width : 70px;\r\n");
      out.write("   }\r\n");
      out.write("   .td_subject{\r\n");
      out.write("      width : 200px;\r\n");
      out.write("      text-align : left;\r\n");
      out.write("   }\r\n");
      out.write("   .td_writer, .td_regdate{\r\n");
      out.write("      width : 110px;\r\n");
      out.write("   }\r\n");
      out.write("   .td_writer, .td_regdate{\r\n");
      out.write("      width : 110px;\r\n");
      out.write("   }\r\n");
      out.write("   .td_mcode{\r\n");
      out.write("      width : 110px;\r\n");
      out.write("   }\r\n");
      out.write("   .notice{\r\n");
      out.write("      background: green;\r\n");
      out.write("   }\r\n");
      out.write(".t1:hover{\r\n");
      out.write("   color : white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".divside1{\r\n");
      out.write("\twidth:200px;\r\n");
      out.write("\theight:800px;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write(" } \r\n");
      out.write(".side1{\r\n");
      out.write("\twidth:190px;\r\n");
      out.write("\theight: 600px;\r\n");
      out.write("}\r\n");
      out.write(".divside2{\r\n");
      out.write("\twidth:190px;\r\n");
      out.write("\theight:800px;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tright:0px;\r\n");
      out.write(" } \r\n");
      out.write(".side2{\r\n");
      out.write("\twidth:190px;\r\n");
      out.write("\theight: 600px;\r\n");
      out.write("\tright:0%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");

   ArrayList<Board> boardList = (ArrayList<Board>)request.getAttribute("boardList");
   ArrayList<Board> boardNoticeList=(ArrayList<Board>)request.getAttribute("boardNoticeList");
   PageInfo pageInfo = (PageInfo)request.getAttribute("pageInfo");
   int number =pageInfo.getNumber();
   int b_division = (Integer)request.getAttribute("b_division");

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"divside1\">\r\n");
      out.write("<img class=\"side1\" src=\"images/side1.png\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <section id = \"boardListArea\">\r\n");
      out.write("   ");

      if(boardList !=null && boardList.size() > 0){
   
      out.write("\r\n");
      out.write("      <h1>좋은 하루 되세요^^</h1>\r\n");
      out.write("      <br>\r\n");
      out.write("      <div>\r\n");
      out.write("      <table>\r\n");
      out.write("         <tr class = \"tr_title\">\r\n");
      out.write("            <th>영화제목</th>\r\n");
      out.write("            <th>제목</th>\r\n");
      out.write("            <th>작성자</th>\r\n");
      out.write("            <th>조회수</th>\r\n");
      out.write("            \r\n");
      out.write("         </tr>\r\n");
      out.write("         ");

         if(boardNoticeList !=null){
            for(int i=0; i<boardNoticeList.size(); i++){
         
      out.write("\r\n");
      out.write("            <tr class=\"notice\">\r\n");
      out.write("               <td><b>공지사항</b></td>\r\n");
      out.write("               <td class = \"namehover\"><a href=\"boardContent.bo?b_code=");
      out.print(boardNoticeList.get(i).getB_code());
      out.write("&pageNum=");
      out.print(pageInfo.getCurrentPage());
      out.write("&b_division=");
      out.print(b_division);
      out.write("\" class=\"a1\"><b>");
      out.print(boardNoticeList.get(i).getB_name() );
      out.write("</b></a></td>\r\n");
      out.write("               <td><b>");
      out.print(boardNoticeList.get(i).getB_author() );
      out.write("</b></td>\r\n");
      out.write("               <td><b>");
      out.print(boardNoticeList.get(i).getReadcount());
      out.write("</b></td>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            </tr>\r\n");
      out.write("         ");

            }
         }
         
      out.write("\r\n");
      out.write("         ");

            for(int i = 0; i <boardList.size();i++){
         
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td>");
      out.print(boardList.get(i).getB_mcode() );
      out.write("</td>\r\n");
      out.write("            <td class=\"namehover\">\r\n");
      out.write("            <a href=\"boardContent.bo?b_code=");
      out.print(boardList.get(i).getB_code());
      out.write("&pageNum=");
      out.print(pageInfo.getCurrentPage());
      out.write("&b_division=");
      out.print(b_division);
      out.write("\" class=\"a1\">");
      out.print(boardList.get(i).getB_name() );
      out.write("</a>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>");
      out.print(boardList.get(i).getB_author() );
      out.write("</td>\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <td>");
      out.print(boardList.get(i).getReadcount() );
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         ");

            }
         
      out.write("\r\n");
      out.write("      </table>\r\n");
      out.write("      </div>\r\n");
      out.write("         ");

            if(pageInfo.getStartPage() > 1){
               
         
      out.write("\r\n");
      out.write("         <a href = \"boardList.bo?pageNum=");
      out.print(pageInfo.getStartPage() - 10 );
      out.write("&b_division=");
      out.print(b_division);
      out.write("\" class=\"a2\">[이전]</a>\r\n");
      out.write("      ");

      }
         for(int i = pageInfo.getStartPage(); i<=pageInfo.getEndPage();i++){
      
      out.write("\r\n");
      out.write("         <a href = \"boardList.bo?pageNum=");
      out.print(i);
      out.write("&b_division=");
      out.print(b_division);
      out.write("\"  class=\"a3\">[");
      out.print(i );
      out.write("]</a>\r\n");
      out.write("       ");

      }
         if(pageInfo.getEndPage() < pageInfo.getPageCount()){//현재 마지막 그룹이 아니면
   
      out.write("\r\n");
      out.write("      <a href = \"boardList.bo?pageNum=");
      out.print(pageInfo.getStartPage() + 10 );
      out.write("&b_division=");
      out.print(b_division);
      out.write("\" class=\"a2\">[다음]</a>\r\n");
      out.write("   ");

      }
   
      out.write("\r\n");
      out.write("   ");

      }
   
      out.write("\r\n");
      out.write("   <br><a href = \"writeForm.bo?b_division=");
      out.print(b_division);
      out.write("\"><input type=\"button\" value=\"글쓰기\"></a>\r\n");
      out.write("   ");

   int u_division=(int)session.getAttribute("u_division");
   
      out.write("\r\n");
      out.write("   ");
 if(u_division==0){ 
      out.write(" \r\n");
      out.write("   <a href = \"writeForm.bo?b_division=");
      out.print(b_division+3);
      out.write("\"><input type=\"button\"  value=\"공지사항 글쓰기\"></a>\r\n");
      out.write("   ");
} 
      out.write("\r\n");
      out.write("   </section>\r\n");
      out.write("   <div class=\"divside2\">\r\n");
      out.write("<img class=\"side2\" src=\"images/side2.png\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
